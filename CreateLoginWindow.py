# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CreateLoginWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from CLASSES import *

import sys
import GLOBALS
import StoreWindow
# import backupFile

class Ui_CreateLoginWindow(object):
    def setupUi(self, CreateLoginWindow):

        ''' FUNCTIONS '''
        # This is used to create a user
        def createUser():

                user = User(None, None)

                createUsernameValue = self.createLoginWindow_CreateUsernameLE.text()
                createPasswordValue = self.createLoginWindow_CreatePasswordLE.text()


                # This is for when the user creates another account
                for user in GLOBALS.users:

                        # When both the username and password have values
                        if self.createLoginWindow_CreateUsernameLE.text() != "" and self.createLoginWindow_CreatePasswordLE.text() != "":

                                if user.getUsername() == createUsernameValue:
                                        print("This user already exists..")
                                        self.createLoginWindow_CreateUsernameLE.setText("")
                                        self.createLoginWindow_CreatePasswordLE.setText("")
                                        break
                                else:
                                        user.setUsername(createUsernameValue)
                                        user.setPassword(createPasswordValue)

                                        GLOBALS.users.append(user)

                                        for user in GLOBALS.users:
                                                GLOBALS.createdAccounts.append(user.getUsername() + " - " + user.getUsername())
                                                break

                                        print("Created User")

                                        self.createLoginWindow_CreateUsernameLE.setText("")
                                        self.createLoginWindow_CreatePasswordLE.setText("")

                                        # enterStartWindow()

                                        break

                        # When one/both dont have value(s)
                        else:
                                if self.createLoginWindow_CreateUsernameLE.text() == "":
                                        print("You cannot have a blank username..")

                                if self.createLoginWindow_CreatePasswordLE.text() == "":
                                        print("You cannot have a blank password..")

                # This is for when the user creates their first account
                if len(GLOBALS.users) == 0:

                    if self.createLoginWindow_CreateUsernameLE.text() != "" and self.createLoginWindow_CreatePasswordLE.text() != "":

                            user.setUsername(createUsernameValue)
                            user.setPassword(createPasswordValue)

                            GLOBALS.users.append(user)

                            for user in GLOBALS.users:
                                    GLOBALS.createdAccounts.append(user.getUsername() + " - " + user.getUsername())
                                    break

                            print("Created User")

                            self.createLoginWindow_CreateUsernameLE.setText("")
                            self.createLoginWindow_CreatePasswordLE.setText("")

                    else:
                            if self.createLoginWindow_CreateUsernameLE.text() == "":
                                print("You cannot have a blank username..")

                            if self.createLoginWindow_CreatePasswordLE.text() == "":
                                print("You cannot have a blank password..")

                        # enterStartWindow()

                for user in GLOBALS.users:
                    print(user.getUsername() + ' - ' + user.getPassword())

        # This is used to login a user
        def loginUser():

                enterUsernameValue = self.createLoginWindow_EnterUsernameLE.text()
                enterPasswordValue = self.createLoginWindow_EnterPasswordLE.text()

                print(enterUsernameValue)
                print(enterPasswordValue)


                for user in GLOBALS.users:

                # When both the username and password have values
                    if enterUsernameValue != "" and enterPasswordValue != "":
                            if user.getUsername() == enterUsernameValue and user.getPassword() == enterPasswordValue:
                                    GLOBALS.currentUserName.clear()
                                    GLOBALS.currentPassword.clear()

                                    print("Logging you in.")

                                    GLOBALS.currentUserName.append(enterUsernameValue)
                                    GLOBALS.currentPassword.append(enterPasswordValue)

                                    self.createLoginWindow_EnterUsernameLE.setText("")
                                    self.createLoginWindow_EnterPasswordLE.setText("")


                                    enterStoreWindow()

                            if not user.getUsername() == enterUsernameValue and user.getPassword() == enterPasswordValue:
                                    print("This user does not exist..")

                                    self.createLoginWindow_EnterUsernameLE.setText("")
                                    self.createLoginWindow_EnterPasswordLE.setText("")

                    # When one/both dont have value(s)
                    else:
                            if enterUsernameValue == "":
                                    print("You cannot have a blank username..")

                            if enterPasswordValue == "":
                                    print("You cannot have a blank password..")

                    break # THIS WAS CAUSING THE STORE WINDOW STAYING UP AFTER LOGGING IN FOR A SECOND TIME AND LOGGING OUT (Thanks to Collin for pointing this out)

        # What do you think this does??
        def exitApp():
            sys.exit()

        # Routes user to store window
        def enterStoreWindow():

            # Showing Store Window
            self.window = QtWidgets.QMainWindow()
            self.ui = StoreWindow.Ui_StoreWindow()
            self.ui.setupUi(self.window)
            self.window.show()

            # Hiding the Start Window
            CreateLoginWindow.hide()

            print("Routing to Store Window")


        CreateLoginWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint) # Hides the title bar
        CreateLoginWindow.setObjectName("CreateLoginWindow")
        CreateLoginWindow.resize(850, 700)
        CreateLoginWindow.setMinimumSize(QtCore.QSize(850, 700))
        CreateLoginWindow.setMaximumSize(QtCore.QSize(850, 700))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../Web Development Related/Website Materials/Medias/Website CDNS/animex/icons/tab-icons/favicon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        CreateLoginWindow.setWindowIcon(icon)
        CreateLoginWindow.setLayoutDirection(QtCore.Qt.RightToLeft)
        CreateLoginWindow.setStyleSheet("background-color: rgb(240, 240, 240)\n"
"")
        self.centralwidget = QtWidgets.QWidget(CreateLoginWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.createLoginWindow_MainHeadingLabel = QtWidgets.QLabel(self.centralwidget)
        self.createLoginWindow_MainHeadingLabel.setGeometry(QtCore.QRect(6, 110, 841, 71))
        font = QtGui.QFont()
        font.setFamily("Public Sans ExtraBold")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.createLoginWindow_MainHeadingLabel.setFont(font)
        self.createLoginWindow_MainHeadingLabel.setStyleSheet("color: rgb(14, 106, 255);")
        self.createLoginWindow_MainHeadingLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.createLoginWindow_MainHeadingLabel.setObjectName("createLoginWindow_MainHeadingLabel")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(210, 240, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans SemiBold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: black;")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(440, 240, 191, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans SemiBold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: black;")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(210, 380, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans SemiBold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: black;")
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(440, 380, 201, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans SemiBold")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: black;")
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.createLoginWindow_CreateUsernameLE = QtWidgets.QLineEdit(self.centralwidget)
        self.createLoginWindow_CreateUsernameLE.setGeometry(QtCore.QRect(220, 300, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        self.createLoginWindow_CreateUsernameLE.setFont(font)
        self.createLoginWindow_CreateUsernameLE.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createLoginWindow_CreateUsernameLE.setStyleSheet("border: 1px solid rgb(211, 211, 211);\n"
"border-radius: 7px;\n"
"background-color: white;\n"
"padding-left:7px;\n"
"padding-right:7px;")
        self.createLoginWindow_CreateUsernameLE.setObjectName("createLoginWindow_CreateUsernameLE")
        self.createLoginWindow_CreatePasswordLE = QtWidgets.QLineEdit(self.centralwidget)
        self.createLoginWindow_CreatePasswordLE.setGeometry(QtCore.QRect(450, 300, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        self.createLoginWindow_CreatePasswordLE.setFont(font)
        self.createLoginWindow_CreatePasswordLE.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createLoginWindow_CreatePasswordLE.setEchoMode(QtWidgets.QLineEdit.Password)
        self.createLoginWindow_CreatePasswordLE.setStyleSheet("border: 1px solid rgb(211, 211, 211);\n"
"border-radius: 7px;\n"
"background-color: white;\n"
"padding-left:7px;\n"
"padding-right:7px;")
        self.createLoginWindow_CreatePasswordLE.setObjectName("createLoginWindow_CreatePasswordLE")
        self.createLoginWindow_EnterUsernameLE = QtWidgets.QLineEdit(self.centralwidget)
        self.createLoginWindow_EnterUsernameLE.setGeometry(QtCore.QRect(220, 440, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        self.createLoginWindow_EnterUsernameLE.setFont(font)
        self.createLoginWindow_EnterUsernameLE.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createLoginWindow_EnterUsernameLE.setStyleSheet("border: 1px solid rgb(211, 211, 211);\n"
"border-radius: 7px;\n"
"background-color: white;\n"
"padding-left:7px;\n"
"padding-right:7px;")
        self.createLoginWindow_EnterUsernameLE.setObjectName("createLoginWindow_EnterUsernameLE")
        self.createLoginWindow_EnterPasswordLE = QtWidgets.QLineEdit(self.centralwidget)
        self.createLoginWindow_EnterPasswordLE.setGeometry(QtCore.QRect(450, 440, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        self.createLoginWindow_EnterPasswordLE.setFont(font)
        self.createLoginWindow_EnterPasswordLE.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createLoginWindow_EnterPasswordLE.setEchoMode(QtWidgets.QLineEdit.Password)
        self.createLoginWindow_EnterPasswordLE.setStyleSheet("border: 1px solid rgb(211, 211, 211);\n"
"border-radius: 7px;\n"
"background-color: white;\n"
"padding-left:7px;\n"
"padding-right:7px;")
        self.createLoginWindow_EnterPasswordLE.setObjectName("createLoginWindow_EnterPasswordLE")
        self.createLoginWindow_CreateBtn = QtWidgets.QPushButton(self.centralwidget)
        self.createLoginWindow_CreateBtn.setGeometry(QtCore.QRect(320, 540, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        font.setPointSize(11)
        self.createLoginWindow_CreateBtn.setFont(font)
        self.createLoginWindow_CreateBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createLoginWindow_CreateBtn.setAutoFillBackground(False)
        self.createLoginWindow_CreateBtn.clicked.connect(createUser)
        self.createLoginWindow_CreateBtn.setStyleSheet("background: rgb(20, 134, 255);\n"
"color: white;\n"
"border: none;")
        self.createLoginWindow_CreateBtn.setObjectName("createLoginWindow_CreateBtn")
        self.createLoginWindow_SigninBtn = QtWidgets.QPushButton(self.centralwidget)
        self.createLoginWindow_SigninBtn.setGeometry(QtCore.QRect(450, 540, 81, 51))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        font.setPointSize(11)
        self.createLoginWindow_SigninBtn.setFont(font)
        self.createLoginWindow_SigninBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createLoginWindow_SigninBtn.clicked.connect(loginUser)
        self.createLoginWindow_SigninBtn.setAutoFillBackground(False)
        self.createLoginWindow_SigninBtn.setStyleSheet("background: rgb(20, 134, 255);\n"
"color: white;\n"
"border: none;")
        self.createLoginWindow_SigninBtn.setObjectName("createLoginWindow_SigninBtn")
        self.createLoginWindow_StartBtn = QtWidgets.QPushButton(self.centralwidget)
        self.createLoginWindow_StartBtn.clicked.connect(exitApp)
        self.createLoginWindow_StartBtn.setGeometry(QtCore.QRect(10, 10, 81, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        font.setPointSize(11)
        self.createLoginWindow_StartBtn.setFont(font)
        self.createLoginWindow_StartBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.createLoginWindow_StartBtn.setAutoFillBackground(False)
        self.createLoginWindow_StartBtn.setStyleSheet("background:rgb(34, 48, 255);\n"
"color: white;\n"
"border: none;")
        self.createLoginWindow_StartBtn.setObjectName("createLoginWindow_StartBtn")
        CreateLoginWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(CreateLoginWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 850, 21))
        self.menubar.setObjectName("menubar")
        CreateLoginWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(CreateLoginWindow)
        self.statusbar.setObjectName("statusbar")
        CreateLoginWindow.setStatusBar(self.statusbar)

        self.retranslateUi(CreateLoginWindow)
        QtCore.QMetaObject.connectSlotsByName(CreateLoginWindow)

    def retranslateUi(self, CreateLoginWindow):
        _translate = QtCore.QCoreApplication.translate
        CreateLoginWindow.setWindowTitle(_translate("CreateLoginWindow", "ANIMEX - Create/Login"))
        self.createLoginWindow_MainHeadingLabel.setText(_translate("CreateLoginWindow", "CREATE/LOGIN USER"))
        self.label.setText(_translate("CreateLoginWindow", "CREATE USERNAME"))
        self.label_2.setText(_translate("CreateLoginWindow", "CREATE PASSWORD"))
        self.label_3.setText(_translate("CreateLoginWindow", "ENTER USERNAME"))
        self.label_4.setText(_translate("CreateLoginWindow", "ENTER PASSWORD"))
        self.createLoginWindow_CreateBtn.setText(_translate("CreateLoginWindow", "CREATE"))
        self.createLoginWindow_SigninBtn.setText(_translate("CreateLoginWindow", "SIGN IN"))
        self.createLoginWindow_StartBtn.setText(_translate("CreateLoginWindow", "EXIT"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    CreateLoginWindow = QtWidgets.QMainWindow()
    ui = Ui_CreateLoginWindow()
    ui.setupUi(CreateLoginWindow)
    CreateLoginWindow.show()
    print("YOU CANNOT RUN THIS AS THE APP LAUNCHER.. Run StartWindow.py!")

    # Backing up files (UNCOMMENT THIS IF U WANT TO BACKUP YOUR FILES)
    # backupFile.backupAllFiles()

    sys.exit()

