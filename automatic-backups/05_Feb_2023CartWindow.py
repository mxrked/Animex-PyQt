# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CartWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import StoreWindow
import GLOBALS
import sys
import backupFile

class Ui_CartWindow(object):


    def setupUi(self, CartWindow):

        ''' FUNCTIONS '''
        # What do u think this does??
        def exitApp():
            sys.exit()

        # Routes user to store window
        def enterStoreWindow():

            self.window = QtWidgets.QMainWindow()
            self.ui = StoreWindow.Ui_StoreWindow()
            self.ui.setupUi(self.window)
            self.window.show()

            # Hiding the Store Window
            CartWindow.hide()

            print("Routing to Cart Window")

        # Checks the user out and clears the cart and its contents
        def checkoutCart():

            self.cartWindow_ItemsFrame.deleteLater() # Deletes the items displayed in cart

            # Clearing arrays
            GLOBALS.cart.clear()
            GLOBALS.cartPrices.clear()
            GLOBALS.cartQuantities.clear()

            # Changing text for bottom labels
            self.cartWindow_CapacityLabel.setText("0")
            self.cartWindow_GrandTotalLabel.setText("0")



        CartWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint) # Hides the title bar
        CartWindow.setObjectName("CartWindow")
        CartWindow.resize(1063, 780)
        CartWindow.setMinimumSize(QtCore.QSize(1063, 780))
        CartWindow.setMaximumSize(QtCore.QSize(1063, 780))
        self.centralwidget = QtWidgets.QWidget(CartWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(100, 10, 871, 91))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(200, 25, 200, 25)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.cartWindow_StoreBtn = QtWidgets.QPushButton(self.layoutWidget)
        self.cartWindow_StoreBtn.clicked.connect(enterStoreWindow)
        self.cartWindow_StoreBtn.setMinimumSize(QtCore.QSize(80, 40))
        self.cartWindow_StoreBtn.setMaximumSize(QtCore.QSize(12, 16777215))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        font.setPointSize(11)
        self.cartWindow_StoreBtn.setFont(font)
        self.cartWindow_StoreBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cartWindow_StoreBtn.setAutoFillBackground(False)
        self.cartWindow_StoreBtn.setStyleSheet("background:rgb(34, 48, 255);\n"
"color: white;\n"
"border: none;")
        self.cartWindow_StoreBtn.setObjectName("cartWindow_StoreBtn")
        self.horizontalLayout.addWidget(self.cartWindow_StoreBtn)
        self.cartWindow_CheckoutBtn = QtWidgets.QPushButton(self.layoutWidget)
        self.cartWindow_CheckoutBtn.clicked.connect(checkoutCart)
        self.cartWindow_CheckoutBtn.setMinimumSize(QtCore.QSize(0, 40))
        self.cartWindow_CheckoutBtn.setMaximumSize(QtCore.QSize(120, 16777215))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        font.setPointSize(11)
        self.cartWindow_CheckoutBtn.setFont(font)
        self.cartWindow_CheckoutBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cartWindow_CheckoutBtn.setAutoFillBackground(False)
        self.cartWindow_CheckoutBtn.setStyleSheet("background:rgb(34, 48, 255);\n"
"color: white;\n"
"border: none;")
        self.cartWindow_CheckoutBtn.setObjectName("cartWindow_CheckoutBtn")
        self.horizontalLayout.addWidget(self.cartWindow_CheckoutBtn)
        self.cartWindow_LogoutBtn = QtWidgets.QPushButton(self.layoutWidget)
        self.cartWindow_LogoutBtn.clicked.connect(exitApp)
        self.cartWindow_LogoutBtn.setMinimumSize(QtCore.QSize(0, 40))
        self.cartWindow_LogoutBtn.setMaximumSize(QtCore.QSize(120, 16777215))
        font = QtGui.QFont()
        font.setFamily("Public Sans Medium")
        font.setPointSize(11)
        self.cartWindow_LogoutBtn.setFont(font)
        self.cartWindow_LogoutBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cartWindow_LogoutBtn.setAutoFillBackground(False)
        self.cartWindow_LogoutBtn.setStyleSheet("background:rgb(34, 48, 255);\n"
"color: white;\n"
"border: none;")
        self.cartWindow_LogoutBtn.setObjectName("cartWindow_LogoutBtn")
        self.horizontalLayout.addWidget(self.cartWindow_LogoutBtn)
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(10, 110, 1045, 521))
        self.scrollArea.setMinimumSize(QtCore.QSize(0, 0))
        self.scrollArea.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.scrollArea.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.scrollArea.setStyleSheet("QScrollArea {\n"
"    border: 1px solid rgb(230, 230, 230);\n"
"}\n"
"\n"
"QScrollBar:vertical {\n"
"    border: none;\n"
"    background-color: white;\n"
"    border-radius: 5px;\n"
"    width: 15px;\n"
"    margin: 15px 0 0;\n"
"}\n"
"\n"
"\n"
"/* Handle */\n"
"QScrollBar::handle:vertical {\n"
"    background-color: rgb(34, 48, 255);\n"
"}\n"
"\n"
"/* Top Btn */\n"
"QScrollBar::sub-line:vertical {\n"
"    background-color:rgb(34, 48, 255);\n"
"}")
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1028, 1218))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.cartWindow_ItemsFrame = QtWidgets.QFrame(self.scrollAreaWidgetContents)

        # THIS WILL MAKE THE HEIGHT CHANGE DYNAMICALLY
        cartWindow_ItemsFrameSizeHint = self.cartWindow_ItemsFrame.sizeHint().height()
        self.cartWindow_ItemsFrame.setMinimumHeight(cartWindow_ItemsFrameSizeHint)

        self.cartWindow_ItemsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.cartWindow_ItemsFrame.setFrameShadow(QtWidgets.QFrame.Raised)

        self.cartItemsVerticalLayout = QtWidgets.QVBoxLayout()


        for item in GLOBALS.cart:
            # Display the different products (name, price, images) into this frame


            self.cartItem = QtWidgets.QWidget()
            self.cartItem.setMinimumHeight(150)
            self.cartItemLayout = QtWidgets.QHBoxLayout()

            self.cartItemLayout.setContentsMargins(40, 0, 30, 0)

            self.cartItemImgHolder = QtWidgets.QLabel()
            self.cartItemImg = QtGui.QPixmap(item.getProductImg())
            self.cartItemImg = self.cartItemImg.scaledToWidth(115) # This is how u resize an image


            self.cartItemImgHolder.setPixmap(self.cartItemImg)

            # self.storeItemImgHolder.show()

            self.cartItemName = QtWidgets.QLabel(item.getProductName())
            self.cartItemName.setStyleSheet("padding-left: 50px;")

            self.cartItemPrice = QtWidgets.QLabel("$" + str(item.getProductPrice()))
            self.cartItemPrice.setStyleSheet("padding-left: 100px;")

            self.cartItemQuantity = QtWidgets.QLabel("Q: " + str(item.getProductQuantity()))
            self.cartItemQuantity.setStyleSheet("padding-left: 80px;")

            # self.cartItemCB = QtWidgets.QCheckBox("Add/Remove")
            # self.storeItemCB.setStyleSheet("padding-left: 80px;")

            # self.storeItemCB.setObjectName("storeItem_" + str(cbNum))

            self.cartItem.setLayout(self.cartItemLayout)

            self.cartItemLayout.addWidget(self.cartItemImgHolder)
            self.cartItemLayout.addWidget(self.cartItemName)
            self.cartItemLayout.addWidget(self.cartItemPrice)
            self.cartItemLayout.addWidget(self.cartItemQuantity)
            self.cartItemsVerticalLayout.addWidget(self.cartItem)



        self.cartWindow_ItemsFrame.setLayout(self.cartItemsVerticalLayout)

        self.cartWindow_ItemsFrame.setObjectName("cartWindow_ItemsFrame")
        self.verticalLayout_2.addWidget(self.cartWindow_ItemsFrame)

        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 660, 201, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.cartWindow_GrandTotalLabel = QtWidgets.QLabel(self.centralwidget)
        self.cartWindow_GrandTotalLabel.setText(str(round(sum(GLOBALS.cartPrices), 2)))
        self.cartWindow_GrandTotalLabel.setGeometry(QtCore.QRect(260, 660, 171, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.cartWindow_GrandTotalLabel.setFont(font)
        self.cartWindow_GrandTotalLabel.setStyleSheet("color: ")
        self.cartWindow_GrandTotalLabel.setObjectName("cartWindow_GrandTotalLabel")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(230, 660, 31, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: ")
        self.label_3.setObjectName("label_3")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(450, 660, 201, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.cartWindow_CapacityLabel = QtWidgets.QLabel(self.centralwidget)
        self.cartWindow_CapacityLabel.setGeometry(QtCore.QRect(630, 660, 171, 41))
        font = QtGui.QFont()
        font.setFamily("Public Sans")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.cartWindow_CapacityLabel.setFont(font)
        self.cartWindow_CapacityLabel.setStyleSheet("color: ")
        self.cartWindow_CapacityLabel.setText(str(sum(GLOBALS.cartQuantities)))
        self.cartWindow_CapacityLabel.setObjectName("cartWindow_CapacityLabel")
        CartWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(CartWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1063, 21))
        self.menubar.setObjectName("menubar")
        CartWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(CartWindow)
        self.statusbar.setObjectName("statusbar")
        CartWindow.setStatusBar(self.statusbar)

        self.retranslateUi(CartWindow)
        QtCore.QMetaObject.connectSlotsByName(CartWindow)

    def retranslateUi(self, CartWindow):
        _translate = QtCore.QCoreApplication.translate
        CartWindow.setWindowTitle(_translate("CartWindow", "ANIMEX - Cart"))
        self.cartWindow_StoreBtn.setText(_translate("CartWindow", "STORE"))
        self.cartWindow_CheckoutBtn.setText(_translate("CartWindow", "CHECKOUT"))
        self.cartWindow_LogoutBtn.setText(_translate("CartWindow", "LOGOUT"))
        self.label.setText(_translate("CartWindow", "Cart Grand Total:"))
        self.cartWindow_GrandTotalLabel.setText(_translate("CartWindow", str(round(sum(GLOBALS.cartPrices), 2))))
        self.label_3.setText(_translate("CartWindow", "$"))
        self.label_2.setText(_translate("CartWindow", "Cart Capacity:"))
        self.cartWindow_CapacityLabel.setText(_translate("CartWindow", str(sum(GLOBALS.cartQuantities))))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    CartWindow = QtWidgets.QMainWindow()
    ui = Ui_CartWindow()
    ui.setupUi(CartWindow)
    CartWindow.show()
    print("YOU CANNOT RUN THIS AS THE APP LAUNCHER.. Run StartWindow.py!")

    # Backing up files
    backupFile.backupAllFiles()

    sys.exit()
